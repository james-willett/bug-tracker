networks:
  bugtracker:
    driver: bridge

services:
  frontend:
    build:
      context: ./bugtracker-frontend
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://backend:8080 # For container-to-container communication
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - bugtracker
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:3000"]
      interval: 10s
      timeout: 5s
      retries: 3

  backend:
    build:
      context: ./bugtracker-backend
    ports:
      - "8080:8080"
    volumes:
      - ./data:/app/data
    networks:
      - bugtracker
    healthcheck:
      test: ["CMD", "wget", "-O", "-", "http://localhost:8080/api/health"]
      interval: 10s
      timeout: 5s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  tests:
    build:
      context: ./tests
      dockerfile: Dockerfile
    environment:
      - PLAYWRIGHT_TEST_BASE_URL=http://frontend:3000
      - API_BASE_URL=http://backend:8080
      - CI=1
    volumes:
      - ./tests/playwright-report:/tests/playwright-report
      - ./tests/test-results:/tests/test-results
    depends_on:
      frontend:
        condition: service_healthy
      backend:
        condition: service_healthy
    networks:
      - bugtracker

  performance-tests:
    image: grafana/k6:latest
    user: "1000:1000" # Match GitHub Actions runner UID
    volumes:
      - ./performance-tests:/tests
      - ./performance-tests/results:/home/k6/results # Persistent storage with correct permissions
    environment:
      - K6_OUT=json=/home/k6/results/results.json
    working_dir: /tests
    command: run --out json=/home/k6/results/results.json journey.js
    depends_on:
      backend:
        condition: service_healthy
      frontend:
        condition: service_healthy
    networks:
      - bugtracker
